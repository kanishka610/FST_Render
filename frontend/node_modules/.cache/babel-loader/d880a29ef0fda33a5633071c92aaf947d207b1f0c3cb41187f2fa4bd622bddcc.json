{"ast":null,"code":"import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';import axios from'axios';// Replace this with your deployed Render backend URL\nconst API_URL='https://<YOUR-RENDER-BACKEND-URL>.onrender.com/activities';// Fetch all activities\nexport const fetchActivities=createAsyncThunk('activities/fetch',async()=>{const res=await axios.get(API_URL);return res.data;});// Add new activity\nexport const addActivityAPI=createAsyncThunk('activities/add',async activity=>{const res=await axios.post(API_URL,activity);return res.data;});// Update activity\nexport const updateActivityAPI=createAsyncThunk('activities/update',async _ref=>{let{id,data}=_ref;const res=await axios.put(\"\".concat(API_URL,\"/\").concat(id),data);return res.data;});// Delete activity\nexport const deleteActivityAPI=createAsyncThunk('activities/delete',async id=>{await axios.delete(\"\".concat(API_URL,\"/\").concat(id));return id;});const activitySlice=createSlice({name:'activities',initialState:{list:[],status:'idle'},reducers:{},extraReducers:builder=>{builder.addCase(fetchActivities.fulfilled,(state,action)=>{state.list=action.payload;}).addCase(addActivityAPI.fulfilled,(state,action)=>{state.list.push(action.payload);}).addCase(updateActivityAPI.fulfilled,(state,action)=>{const index=state.list.findIndex(a=>a._id===action.payload._id);if(index>=0)state.list[index]=action.payload;}).addCase(deleteActivityAPI.fulfilled,(state,action)=>{state.list=state.list.filter(a=>a._id!==action.payload);});}});export default activitySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_URL","fetchActivities","res","get","data","addActivityAPI","activity","post","updateActivityAPI","_ref","id","put","concat","deleteActivityAPI","delete","activitySlice","name","initialState","list","status","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","push","index","findIndex","a","_id","filter","reducer"],"sources":["D:/mini-volunteering-app/frontend/src/features/activitySlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n// Replace this with your deployed Render backend URL\r\nconst API_URL = 'https://<YOUR-RENDER-BACKEND-URL>.onrender.com/activities';\r\n\r\n// Fetch all activities\r\nexport const fetchActivities = createAsyncThunk('activities/fetch', async () => {\r\n  const res = await axios.get(API_URL);\r\n  return res.data;\r\n});\r\n\r\n// Add new activity\r\nexport const addActivityAPI = createAsyncThunk('activities/add', async (activity) => {\r\n  const res = await axios.post(API_URL, activity);\r\n  return res.data;\r\n});\r\n\r\n// Update activity\r\nexport const updateActivityAPI = createAsyncThunk('activities/update', async ({ id, data }) => {\r\n  const res = await axios.put(`${API_URL}/${id}`, data);\r\n  return res.data;\r\n});\r\n\r\n// Delete activity\r\nexport const deleteActivityAPI = createAsyncThunk('activities/delete', async (id) => {\r\n  await axios.delete(`${API_URL}/${id}`);\r\n  return id;\r\n});\r\n\r\nconst activitySlice = createSlice({\r\n  name: 'activities',\r\n  initialState: { list: [], status: 'idle' },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchActivities.fulfilled, (state, action) => { state.list = action.payload; })\r\n      .addCase(addActivityAPI.fulfilled, (state, action) => { state.list.push(action.payload); })\r\n      .addCase(updateActivityAPI.fulfilled, (state, action) => {\r\n        const index = state.list.findIndex(a => a._id === action.payload._id);\r\n        if (index >= 0) state.list[index] = action.payload;\r\n      })\r\n      .addCase(deleteActivityAPI.fulfilled, (state, action) => {\r\n        state.list = state.list.filter(a => a._id !== action.payload);\r\n      });\r\n  }\r\n});\r\n\r\nexport default activitySlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}