{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Backend URL\nconst API_URL = 'http://localhost:5000/activities';\n\n// Fetch all activities\nexport const fetchActivities = createAsyncThunk('activities/fetch', async () => {\n  const res = await axios.get(API_URL);\n  return res.data;\n});\n\n// Add new activity\nexport const addActivityAPI = createAsyncThunk('activities/add', async activity => {\n  const res = await axios.post(API_URL, activity);\n  return res.data;\n});\n\n// Update activity\nexport const updateActivityAPI = createAsyncThunk('activities/update', async ({\n  id,\n  data\n}) => {\n  const res = await axios.put(`${API_URL}/${id}`, data);\n  return res.data;\n});\n\n// Delete activity\nexport const deleteActivityAPI = createAsyncThunk('activities/delete', async id => {\n  await axios.delete(`${API_URL}/${id}`);\n  return id;\n});\nconst activitySlice = createSlice({\n  name: 'activities',\n  initialState: {\n    list: [],\n    status: 'idle'\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchActivities.fulfilled, (state, action) => {\n      state.list = action.payload;\n    }).addCase(addActivityAPI.fulfilled, (state, action) => {\n      state.list.push(action.payload);\n    }).addCase(updateActivityAPI.fulfilled, (state, action) => {\n      const index = state.list.findIndex(a => a._id === action.payload._id);\n      if (index >= 0) state.list[index] = action.payload;\n    }).addCase(deleteActivityAPI.fulfilled, (state, action) => {\n      state.list = state.list.filter(a => a._id !== action.payload);\n    });\n  }\n});\nexport default activitySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_URL","fetchActivities","res","get","data","addActivityAPI","activity","post","updateActivityAPI","id","put","deleteActivityAPI","delete","activitySlice","name","initialState","list","status","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","push","index","findIndex","a","_id","filter","reducer"],"sources":["D:/mini-volunteering-app/frontend/src/features/activitySlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n// Backend URL\r\nconst API_URL = 'http://localhost:5000/activities';\r\n\r\n// Fetch all activities\r\nexport const fetchActivities = createAsyncThunk('activities/fetch', async () => {\r\n  const res = await axios.get(API_URL);\r\n  return res.data;\r\n});\r\n\r\n// Add new activity\r\nexport const addActivityAPI = createAsyncThunk('activities/add', async (activity) => {\r\n  const res = await axios.post(API_URL, activity);\r\n  return res.data;\r\n});\r\n\r\n// Update activity\r\nexport const updateActivityAPI = createAsyncThunk('activities/update', async ({ id, data }) => {\r\n  const res = await axios.put(`${API_URL}/${id}`, data);\r\n  return res.data;\r\n});\r\n\r\n// Delete activity\r\nexport const deleteActivityAPI = createAsyncThunk('activities/delete', async (id) => {\r\n  await axios.delete(`${API_URL}/${id}`);\r\n  return id;\r\n});\r\n\r\nconst activitySlice = createSlice({\r\n  name: 'activities',\r\n  initialState: { list: [], status: 'idle' },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchActivities.fulfilled, (state, action) => {\r\n        state.list = action.payload;\r\n      })\r\n      .addCase(addActivityAPI.fulfilled, (state, action) => {\r\n        state.list.push(action.payload);\r\n      })\r\n      .addCase(updateActivityAPI.fulfilled, (state, action) => {\r\n        const index = state.list.findIndex(a => a._id === action.payload._id);\r\n        if (index >= 0) state.list[index] = action.payload;\r\n      })\r\n      .addCase(deleteActivityAPI.fulfilled, (state, action) => {\r\n        state.list = state.list.filter(a => a._id !== action.payload);\r\n      });\r\n  }\r\n});\r\n\r\nexport default activitySlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,kCAAkC;;AAElD;AACA,OAAO,MAAMC,eAAe,GAAGH,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EAC9E,MAAMI,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;EACpC,OAAOE,GAAG,CAACE,IAAI;AACjB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,cAAc,GAAGP,gBAAgB,CAAC,gBAAgB,EAAE,MAAOQ,QAAQ,IAAK;EACnF,MAAMJ,GAAG,GAAG,MAAMH,KAAK,CAACQ,IAAI,CAACP,OAAO,EAAEM,QAAQ,CAAC;EAC/C,OAAOJ,GAAG,CAACE,IAAI;AACjB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMI,iBAAiB,GAAGV,gBAAgB,CAAC,mBAAmB,EAAE,OAAO;EAAEW,EAAE;EAAEL;AAAK,CAAC,KAAK;EAC7F,MAAMF,GAAG,GAAG,MAAMH,KAAK,CAACW,GAAG,CAAC,GAAGV,OAAO,IAAIS,EAAE,EAAE,EAAEL,IAAI,CAAC;EACrD,OAAOF,GAAG,CAACE,IAAI;AACjB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMO,iBAAiB,GAAGb,gBAAgB,CAAC,mBAAmB,EAAE,MAAOW,EAAE,IAAK;EACnF,MAAMV,KAAK,CAACa,MAAM,CAAC,GAAGZ,OAAO,IAAIS,EAAE,EAAE,CAAC;EACtC,OAAOA,EAAE;AACX,CAAC,CAAC;AAEF,MAAMI,aAAa,GAAGhB,WAAW,CAAC;EAChCiB,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAO,CAAC;EAC1CC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACpB,eAAe,CAACqB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACrDD,KAAK,CAACP,IAAI,GAAGQ,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC,CACDJ,OAAO,CAAChB,cAAc,CAACiB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACpDD,KAAK,CAACP,IAAI,CAACU,IAAI,CAACF,MAAM,CAACC,OAAO,CAAC;IACjC,CAAC,CAAC,CACDJ,OAAO,CAACb,iBAAiB,CAACc,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACvD,MAAMG,KAAK,GAAGJ,KAAK,CAACP,IAAI,CAACY,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKN,MAAM,CAACC,OAAO,CAACK,GAAG,CAAC;MACrE,IAAIH,KAAK,IAAI,CAAC,EAAEJ,KAAK,CAACP,IAAI,CAACW,KAAK,CAAC,GAAGH,MAAM,CAACC,OAAO;IACpD,CAAC,CAAC,CACDJ,OAAO,CAACV,iBAAiB,CAACW,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACvDD,KAAK,CAACP,IAAI,GAAGO,KAAK,CAACP,IAAI,CAACe,MAAM,CAACF,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKN,MAAM,CAACC,OAAO,CAAC;IAC/D,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeZ,aAAa,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}